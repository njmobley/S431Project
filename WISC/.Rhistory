aut2 <- subset(aut, aut$SRS_VERSION == 2)
lm.aut1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + ADHD_Subtype + Gender + mABC_AGE, data = aut1)
lm.aut1.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut1)
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.97697 + 93.94573),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = NULL,aes(x = fitted(lm.aut1), y = residuals(lm.aut1))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
qqnorm(lm.aut1$residuals)
qqline(lm.aut1$residuals, col = 'red')
plot(density(lm.aut1$residuals))
ggplot(NULL, aes(x = lm.aut1$residuals, y = lm.aut1.basic$residuals)) + geom_point() + geom_smooth(method = 'lm') + ggtitle("Added Variable Plot")
car::avPlots(lm.aut1)
males <- which(kki.adhd1$Gender == "M")
ggplot(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore,y = fitted(lm.adhd1)[males], colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 64.0176),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 50.0456),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score(Males)") + ylab("Fitted Values") + xlab("mABC Balance Score")
summary(lm.adhd1)
males <- which(kki.adhd1$Gender == "M")
ggplot(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore,y = fitted(lm.adhd1)[males], colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 64.0176),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 50.0456),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score(Males)") + ylab("Fitted Values") + xlab("mABC Balance Score")
summary(lm.adhd1)
males <- which(kki.adhd1$Gender == "M")
#ggplot(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore,y = fitted(lm.adhd1)[males], colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 64.0176),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 50.0456),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score(Males)") + ylab("Fitted Values") + xlab("mABC Balance Score")
males <- which(kki.adhd1$Gender == "M")
ggplot(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore,y = fitted(lm.adhd1)[males], colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 64.0176),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 50.0456),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score(Males)") + ylab("Fitted Values") + xlab("mABC Balance Score")
summary(lm.adhd1)
summary(lm.adhd1)
aut1No <- subset(aut1, aut$ADHD_Subtype == 'No dx')
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.97697 + 93.94573),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
View(aut1No)
aut1No <- subset(aut1, aut$ADHD_Subtype == 'Combined')
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.97697 + 93.94573),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
View(aut1No)
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.97697 + 93.94573),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
aut <- subset(kki, kki$PrimaryDiagnosis == "Autism")
aut1 <- subset(aut, aut$SRS_VERSION == 1)
aut2 <- subset(aut, aut$SRS_VERSION == 2)
lm.aut1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + SecondaryDiagnosis + Gender + mABC_AGE, data = aut1)
lm.aut1.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut1)
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.97697 + 93.94573),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = NULL,aes(x = fitted(lm.aut1), y = residuals(lm.aut1))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
qqnorm(lm.aut1$residuals)
qqline(lm.aut1$residuals, col = 'red')
plot(density(lm.aut1$residuals))
fit1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + SecondaryDiagnosis + Gender + mABC_AGE, data = aut1)
summary(fit1)
fit2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + ADHD_Subtype + Gender + bs(mABC_AGE,knots = 9), data = aut2)
#summary(fit2)
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.47326 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 13.46604 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * -.49684 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .47326 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
lm.aut2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + SecondaryDiagnosis + Gender + mABC_AGE, data = aut2)
lm.aut2.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut2)
aut1.Sec <- subset(aut1, aut1$SecondaryDiagnosis == 'Yes')
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .47326 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
aut1.Sec <- subset(aut1, aut1$SecondaryDiagnosis == 'Yes')
ggplot(data = aut1.Sec, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .47326 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
aut1.Sec <- subset(aut1, aut1$SecondaryDiagnosis == 'Yes')
ggplot(data = aut1.Sec, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1.Sec, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .47326 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1.Sec, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .47326 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 93.94573),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .47326 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .70635 + 90.85685),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .47326 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .47326 + 90.85685),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .47326 + 90.85685),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
lm.aut2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + SecondaryDiagnosis + Gender + mABC_AGE, data = aut2)
lm.aut2.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut2)
lm.aut2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + SecondaryDiagnosis + Gender + mABC_AGE, data = aut2)
lm.aut2.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut2)
summary(lm.aut2)
ggplot(data = aut2, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut2), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut2, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut2), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
lm.aut2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + SecondaryDiagnosis + Gender + mABC_AGE, data = aut2)
lm.aut2.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut2)
ggplot(data = aut2, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut2), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 89.60022),colour = 'red',size = 1.5) +
geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut2, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut2), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 89.60022),colour = 'red',size = 1.5) + geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = NULL,aes(x = fitted(lm.aut2), y = residuals(lm.aut2))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
qqnorm(lm.aut2$residuals)
qqline(lm.aut2$residuals, col = 'red')
plot(density(lm.aut2$residuals))
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() + geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 89.60022),colour = 'red',size = 1.5) + geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = NULL,aes(x = fitted(lm.aut1), y = residuals(lm.aut1))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
ggplot(data = aut2, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut2), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() +
geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 58.690482),colour = 'red',size = 1.5) + geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut2, aes(x = aut2$mABC_Balance.Component.StandardScore, y = fitted(lm.aut2), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() + geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 58.690482),colour = 'red',size = 1.5) + geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut2, aes(x = aut2$mABC_Balance.Component.StandardScore, y = fitted(lm.aut2), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() + geom_line(data = aut2, aes(x = aut2$mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 58.690482),colour = 'red',size = 1.5) + geom_line(data = aut2, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut2, aes(x = aut2$mABC_Balance.Component.StandardScore, y = fitted(lm.aut2), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() + geom_line(data = aut2, aes(x = aut2$mABC_Balance.Component.StandardScore, aut2$mABC_Balance.Component.StandardScore * .0618315482 + 58.690482),colour = 'red',size = 1.5) + geom_line(data = aut2, aes(x = aut2$mABC_Balance.Component.StandardScore, aut2$mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
anova(lm.aut1.basic,lm.aut1)
anova(lm.aut2.basic,lm.aut2)
anova(lm.aut2.basic,lm.aut2)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggthemes)
library(reportr)
library(knitr)
library(splines)
kki.demo <- read.csv("Data/KKI_demographicInfo.csv")
kki.social <- read.csv("Data/KKI_SocialResponsivenessScaleQuestionnaire.csv")
kki.movement <- read.csv("Data/KKI_movementAssessmentBatteryforChildren.csv")
kki.hand <- read.csv("Data/KKI_handedness.csv")
wisc <- read.csv("Data/KKI_WechslerIntelligenceScaleforChildren.csv")
wisc4GAI <- read.csv("Data/wisc4GAI_lookup.csv")
wisc5GAI <- read.csv("Data/wisc5GAI_lookup.csv")
colnames(kki.demo)[1] <- "ID"
colnames(kki.social)[1] <- "ID"
colnames(kki.movement)[1] <- "ID"
colnames(kki.hand)[1] <- "ID"
colnames(wisc)[1] <- "ID"
colnames(wisc4GAI)[1] <- "ID"
colnames(wisc5GAI)[1] <- "ID"
wisc4 <- filter(wisc, WISC_VERSION == 4)
wisc5 <- filter(wisc, WISC_VERSION == 5)
wisc4 <- wisc4[-c(11:15)]
wisc5 <- wisc5[-c(5:10)]
wisc4 <- filter(wisc4, visit == 1)
wisc5 <- filter(wisc5, visit == 1)
#Calculate composite scores for both WISC versions
wisc4$score <- rowSums(wisc4[,5:10])
wisc5$score <- rowSums(wisc5[,5:9])
#Filter out NA scores
wisc4 <- na.omit(wisc4, cols = "score")
wisc5 <- na.omit(wisc5, cols = "score")
#Convert composite scores to GAI scores for WISC version 4
composite4 = rep(0,length(wisc4[,1]))
for (i in 1:length(wisc4[,1])) {
composite4[i] <- wisc4GAI[wisc4[i,11]-5,2]
}
wisc4$GAI <- composite4
#Convert composite scores to GAI scores for WISC version 5
composite5 = rep(0,length(wisc5[,1]))
for (i in 1:length(wisc5[,1])) {
composite5[i] <- wisc5GAI[wisc5[i,10]-4,2]
}
wisc5$GAI <- composite5
#Remove composite scores
wisc4 <- wisc4[-c(2:11)]
wisc5 <- wisc5[-c(2:10)]
#Combine WISC data
wisc.combo <- full_join(wisc4, wisc5, by = c('ID', 'GAI'))
kki <- merge(kki.demo,kki.social)
kki <- merge(kki,kki.movement)
kki <- merge(kki,wisc.combo)
kki <- merge(kki,kki.hand)
## 555
#Now have all the data in a huge data frame
#Removing N/A values. Mostly removing second visits.
kki <- subset(kki,!is.na(kki$SRS_TotalRawScore))
kki <- subset(kki, !is.na(kki$mABC_TotalStandardScore))
kki <- subset(kki,kki$mABC_AGE<14)
kki2 <- filter(kki,PrimaryDiagnosis != "None",SecondaryDiagnosis ==c("Yes", "No"))
multdia <- filter(kki, PrimaryDiagnosis != "None", SecondaryDiagnosis =="Yes")
singdia <- filter(kki, PrimaryDiagnosis != "None" , SecondaryDiagnosis == "No")
nodia <- filter(kki, PrimaryDiagnosis =="None" , SecondaryDiagnosis =="No")
kki.adhd <- subset(kki,PrimaryDiagnosis == "ADHD")
kki.adhd <- subset(kki.adhd,ADHD_Subtype != "Hyperactive/Impulsive")
kki.adhd1 <- subset(kki.adhd,kki.adhd$SRS_VERSION == 1)
kki.adhd2 <- subset(kki.adhd, kki.adhd$SRS_VERSION == 2)
kki.asd <- subset(kki,kki$PrimaryDiagnosis == 'Autism')
kki.adhd <- subset(kki,kki$PrimaryDiagnosis == 'ADHD')
kki.td <- subset(kki,kki$PrimaryDiagnosis == 'None')
diagnosis <- c("ASD","ADHD","TD")
counts <- c(nrow(kki.asd),nrow(kki.adhd),nrow(kki.td))
age <- c(mean(kki.asd$mABC_AGE),mean(kki.adhd$mABC_AGE),mean(kki.td$mABC_AGE))
kki.asd.male <- subset(kki.asd,kki.asd$Gender == 'M')
kki.asd.female <- subset(kki.asd,kki.asd$Gender == 'F')
kki.adhd.male <- subset(kki.adhd,kki.adhd$Gender == 'M')
kki.adhd.female <- subset(kki.adhd,kki.adhd$Gender == 'F')
kki.td.male <- subset(kki.td, kki.td$Gender == 'M')
kki.td.female <- subset(kki.td,kki.td$Gender == 'F')
maleCount <- c(nrow(kki.asd.male),nrow(kki.adhd.male),nrow(kki.td.male))
femaleCount <- c(nrow(kki.asd.female),nrow(kki.adhd.female),nrow(kki.td.female))
rightCount <- c(124,285,307)
leftCount <- c(20,36,42)
table1 <- cbind(diagnosis,counts,round(age,4),maleCount,femaleCount,rightCount,leftCount)
FinalTable <- kable(table1,col.names = c("Primary","Count","Avg Age","Males","Females","RightHanded","LeftHanded"))
FinalTable
graph.dat <- subset(kki,kki$mABC_TotalStandardScore <12)
total <- ggplot(data = graph.dat, aes(x = mABC_TotalStandardScore, y = SRS_TotalRawScore,colour = PrimaryDiagnosis)) + geom_point(alpha = .3) + geom_jitter() + geom_smooth()+ylab("SRS Total Score")+xlab("Motor Assessment Score")+ggtitle("Overall Association Between Social Deficits and Motor Ability")+ theme(legend.position = 'bottom')
SRS.Manual <- ggplot(data = kki, aes(x = mABC_ManualDexterity.Component.StandardScore, y = SRS_TotalRawScore, colour = PrimaryDiagnosis)) + geom_point(alpha = .3) + geom_jitter() + geom_smooth()+ theme(legend.position = 'none')+ylab("SRS Total Score")+xlab("Manual Dexterity Score")+ggtitle("Association between Manual Dexterity and Social Deficits")
SRS.AimAndCatch <- ggplot(data = kki, aes(x = mABC_AimingAndCatching.Component.StandardScore, y = SRS_TotalRawScore, colour = PrimaryDiagnosis)) + geom_point(alpha = .3) + geom_jitter() + geom_smooth()+ theme(legend.position = 'none')+ylab("SRS Total Score")+xlab("Aiming and Catching Score")+ggtitle("Association between Aiming and Catching and Social Deficits")
#Really interesting!
#The better the ADHD kids were at balance the better their social deficit was! Let's investigate the relationship between age and balance
graph.dat <- subset(kki, kki$mABC_Balance.Component.StandardScore < 15)
SRS.Balance <- ggplot(data = graph.dat, aes(x = mABC_Balance.Component.StandardScore, y = SRS_TotalRawScore, colour = PrimaryDiagnosis)) + geom_point(alpha = .3) + geom_jitter() + geom_smooth() + theme(legend.position = 'none')+ylab("SRS Total Score")+xlab("Balance Score")+ggtitle("Association Between Balance and Social Deficits")
total
SRS.Manual
SRS.AimAndCatch
SRS.Balance
ggplot(data = kki, aes(x = GAI, y = SRS_TotalRawScore,colour = PrimaryDiagnosis)) + geom_point() + geom_smooth() + ylab("SRS Total Score")+xlab("GAI Test Score")+ggtitle("Association between GAI Score and Social Deficits")
ggplot(data = kki, aes(x = GAI, y = mABC_TotalStandardScore,colour = PrimaryDiagnosis)) + geom_point() + geom_jitter() + geom_smooth() + ylab("Total Motor Score")+xlab("GAI Test Score")+ggtitle("Association between GAI Score and Motor Skills")
kki$Hand <- cut(kki$EdinburghHandedness_Integer,c(-1.01,-.5,.5,1.01),labels = c("Left","Mixed","Right"))
ggplot(data = na.omit(kki),aes(group = Hand,y = mABC_TotalStandardScore, colour = Hand)) + geom_boxplot() + facet_wrap(na.omit(kki)$PrimaryDiagnosis)
ggplot(data = na.omit(kki),aes(group = Hand,y = SRS_TotalRawScore, colour = Hand)) + geom_boxplot() + facet_wrap(na.omit(kki)$PrimaryDiagnosis)
kki.1 <- subset(kki,kki$SRS_VERSION == 1)
kki.2 <- subset(kki,kki$SRS_VERSION == 2)
t.test(kki.1$SRS_TotalRawScore,kki.2$SRS_TotalRawScore)
nodia1 <- subset(nodia,nodia$SRS_VERSION == 1)
nodia2 <- subset(nodia,nodia$SRS_VERSION == 2)
lm.nodia1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI  + Gender + mABC_AGE, data = nodia1)
lm.nodia2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI  + Gender + mABC_AGE, data = nodia2)
summary(lm.nodia2)
lm.adhd1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + ADHD_Subtype + Gender + mABC_AGE, data = kki.adhd1)
lm.basic1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = kki.adhd1)
ggplot(data = kki.adhd1,aes(x = mABC_Balance.Component.StandardScore,y = fitted(lm.adhd1), colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd1,aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 64.0176),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd1,aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 50.0456),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score") + facet_wrap(~Gender)
males <- which(kki.adhd1$Gender == "M")
ggplot(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore,y = fitted(lm.adhd1)[males], colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 64.0176),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 50.0456),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score(Males)") + ylab("Fitted Values") + xlab("mABC Balance Score")
females <- which(kki.adhd1$Gender == "F")
ggplot(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore,y = fitted(lm.adhd1)[males], colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 64.0176),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 50.0456),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score(Females)") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = NULL,aes(x = fitted(lm.adhd1), y = residuals(lm.adhd1))) + geom_point() + geom_hline( yintercept = 0) + geom_smooth() +
ggtitle("Residual Plot for ADHD Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
standardize <- function(model) {
s = (1/85) * sum(residuals(model)^2)
residuals(model)/ (s * (sqrt(1-influence(model)$hat)))
}
student.lmadhd1 <- standardize(lm.adhd1)
leverage.lmadhd1 <- influence(lm.adhd1)$hat
ggplot(data = NULL,aes(x = leverage.lmadhd1, y = student.lmadhd1)) + geom_point() + geom_hline(y = 0)
anova(lm.basic1,lm.adhd1)
lm.adhd2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + ADHD_Subtype + Gender + mABC_AGE, data = kki.adhd2)
lm.basic2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = kki.adhd2)
ggplot(data = kki.adhd2,aes(x = mABC_AimingAndCatching.Component.StandardScore,y = fitted(lm.adhd2), colour = factor(ADHD_Subtype))) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd2,aes(x = mABC_AimingAndCatching.Component.StandardScore, mABC_AimingAndCatching.Component.StandardScore *-.9143 + 54.637),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd2,aes(x = mABC_AimingAndCatching.Component.StandardScore, mABC_AimingAndCatching.Component.StandardScore *-.9143 + 45.883),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = NULL,aes(x = fitted(lm.adhd2), y = residuals(lm.adhd2))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for ADHD Model(2)") + xlab("Fitted Values") + ylab("Residual Values")
student.lmadhd2 <- standardize(lm.adhd2)
leverage.lmadhd2 <- influence(lm.adhd2)$hat
ggplot(data = NULL,aes(x = leverage.lmadhd2, y = student.lmadhd2)) + geom_point() + geom_hline(y = 0)
anova(lm.basic2,lm.adhd2)
aut <- subset(kki, kki$PrimaryDiagnosis == "Autism")
aut1 <- subset(aut, aut$SRS_VERSION == 1)
aut2 <- subset(aut, aut$SRS_VERSION == 2)
lm.aut1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + SecondaryDiagnosis + Gender + mABC_AGE, data = aut1)
lm.aut1.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut1)
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() + geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 89.60022),colour = 'red',size = 1.5) + geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = NULL,aes(x = fitted(lm.aut1), y = residuals(lm.aut1))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
qqnorm(lm.aut1$residuals)
qqline(lm.aut1$residuals, col = 'red')
plot(density(lm.aut1$residuals))
lm.aut2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + SecondaryDiagnosis + Gender + mABC_AGE, data = aut2)
lm.aut2.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut2)
ggplot(data = NULL,aes(x = fitted(lm.aut2), y = residuals(lm.aut2))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
qqnorm(lm.aut2$residuals)
qqline(lm.aut2$residuals, col = 'red')
plot(density(lm.aut2$residuals))
fit1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + ADHS_Subtype + Gender + mABC_AGE, data = aut1)
fit1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + ADHD_Subtype + Gender + mABC_AGE, data = aut1)
summary(fit1)
fit2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + ADHD_Subtype + Gender + bs(mABC_AGE,knots = 9), data = aut2)
#summary(fit2)
aut <- subset(kki, kki$PrimaryDiagnosis == "Autism")
aut1 <- subset(aut, aut$SRS_VERSION == 1)
aut2 <- subset(aut, aut$SRS_VERSION == 2)
lm.aut1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + ADHD_Subtype + Gender + mABC_AGE, data = aut1)
lm.aut1.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut1)
ggplot(data = NULL,aes(x = fitted(lm.aut1), y = residuals(lm.aut1))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
summary(lm.aut1)
ggplot(data = NULL,aes(x = fitted(lm.aut1), y = residuals(lm.aut1))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = SecondaryDiagnosis)) + geom_point() + geom_jitter() + geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 89.60022),colour = 'red',size = 1.5) + geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = ADHD_Subtype)) + geom_point() + geom_jitter() + geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * .0618315482 + 89.60022),colour = 'red',size = 1.5) + geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 0.0776993785 + 90.85685),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = aut1, aes(x = mABC_Balance.Component.StandardScore, y = fitted(lm.aut1), colour = ADHD_Subtype)) + geom_point() + geom_jitter() + geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * 2.8 + 76.26039),colour = 'red',size = 1.5) + geom_line(data = aut1, aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore * -.76 + 75.99),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
anova(lm.basic.aut1,lm.aut1)
anova(lm.aut1.basic,lm.aut1)
aut <- subset(kki, kki$PrimaryDiagnosis == "Autism")
aut1 <- subset(aut, aut$SRS_VERSION == 1)
aut2 <- subset(aut, aut$SRS_VERSION == 2)
lm.aut1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + SecondaryDiagnosis + Gender + mABC_AGE, data = aut1)
lm.aut1.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut1)
ggplot(data = NULL,aes(x = fitted(lm.aut1), y = residuals(lm.aut1))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
summary(lm.aut1)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggthemes)
library(reportr)
library(knitr)
library(splines)
kki.demo <- read.csv("Data/KKI_demographicInfo.csv")
kki.social <- read.csv("Data/KKI_SocialResponsivenessScaleQuestionnaire.csv")
kki.movement <- read.csv("Data/KKI_movementAssessmentBatteryforChildren.csv")
kki.hand <- read.csv("Data/KKI_handedness.csv")
wisc <- read.csv("Data/KKI_WechslerIntelligenceScaleforChildren.csv")
wisc4GAI <- read.csv("Data/wisc4GAI_lookup.csv")
wisc5GAI <- read.csv("Data/wisc5GAI_lookup.csv")
colnames(kki.demo)[1] <- "ID"
colnames(kki.social)[1] <- "ID"
colnames(kki.movement)[1] <- "ID"
colnames(kki.hand)[1] <- "ID"
colnames(wisc)[1] <- "ID"
colnames(wisc4GAI)[1] <- "ID"
colnames(wisc5GAI)[1] <- "ID"
wisc4 <- filter(wisc, WISC_VERSION == 4)
wisc5 <- filter(wisc, WISC_VERSION == 5)
wisc4 <- wisc4[-c(11:15)]
wisc5 <- wisc5[-c(5:10)]
wisc4 <- filter(wisc4, visit == 1)
wisc5 <- filter(wisc5, visit == 1)
#Calculate composite scores for both WISC versions
wisc4$score <- rowSums(wisc4[,5:10])
wisc5$score <- rowSums(wisc5[,5:9])
#Filter out NA scores
wisc4 <- na.omit(wisc4, cols = "score")
wisc5 <- na.omit(wisc5, cols = "score")
#Convert composite scores to GAI scores for WISC version 4
composite4 = rep(0,length(wisc4[,1]))
for (i in 1:length(wisc4[,1])) {
composite4[i] <- wisc4GAI[wisc4[i,11]-5,2]
}
wisc4$GAI <- composite4
#Convert composite scores to GAI scores for WISC version 5
composite5 = rep(0,length(wisc5[,1]))
for (i in 1:length(wisc5[,1])) {
composite5[i] <- wisc5GAI[wisc5[i,10]-4,2]
}
wisc5$GAI <- composite5
#Remove composite scores
wisc4 <- wisc4[-c(2:11)]
wisc5 <- wisc5[-c(2:10)]
#Combine WISC data
wisc.combo <- full_join(wisc4, wisc5, by = c('ID', 'GAI'))
kki <- merge(kki.demo,kki.social)
kki <- merge(kki,kki.movement)
kki <- merge(kki,wisc.combo)
kki <- merge(kki,kki.hand)
## 555
#Now have all the data in a huge data frame
#Removing N/A values. Mostly removing second visits.
kki <- subset(kki,!is.na(kki$SRS_TotalRawScore))
kki <- subset(kki, !is.na(kki$mABC_TotalStandardScore))
kki <- subset(kki,kki$mABC_AGE<14)
kki2 <- filter(kki,PrimaryDiagnosis != "None",SecondaryDiagnosis ==c("Yes", "No"))
multdia <- filter(kki, PrimaryDiagnosis != "None", SecondaryDiagnosis =="Yes")
singdia <- filter(kki, PrimaryDiagnosis != "None" , SecondaryDiagnosis == "No")
nodia <- filter(kki, PrimaryDiagnosis =="None" , SecondaryDiagnosis =="No")
kki.adhd <- subset(kki,PrimaryDiagnosis == "ADHD")
kki.adhd <- subset(kki.adhd,ADHD_Subtype != "Hyperactive/Impulsive")
kki.adhd1 <- subset(kki.adhd,kki.adhd$SRS_VERSION == 1)
kki.adhd2 <- subset(kki.adhd, kki.adhd$SRS_VERSION == 2)
kki.asd <- subset(kki,kki$PrimaryDiagnosis == 'Autism')
kki.adhd <- subset(kki,kki$PrimaryDiagnosis == 'ADHD')
kki.td <- subset(kki,kki$PrimaryDiagnosis == 'None')
diagnosis <- c("ASD","ADHD","TD")
counts <- c(nrow(kki.asd),nrow(kki.adhd),nrow(kki.td))
age <- c(mean(kki.asd$mABC_AGE),mean(kki.adhd$mABC_AGE),mean(kki.td$mABC_AGE))
kki.asd.male <- subset(kki.asd,kki.asd$Gender == 'M')
kki.asd.female <- subset(kki.asd,kki.asd$Gender == 'F')
kki.adhd.male <- subset(kki.adhd,kki.adhd$Gender == 'M')
kki.adhd.female <- subset(kki.adhd,kki.adhd$Gender == 'F')
kki.td.male <- subset(kki.td, kki.td$Gender == 'M')
kki.td.female <- subset(kki.td,kki.td$Gender == 'F')
maleCount <- c(nrow(kki.asd.male),nrow(kki.adhd.male),nrow(kki.td.male))
femaleCount <- c(nrow(kki.asd.female),nrow(kki.adhd.female),nrow(kki.td.female))
rightCount <- c(124,285,307)
leftCount <- c(20,36,42)
table1 <- cbind(diagnosis,counts,round(age,4),maleCount,femaleCount,rightCount,leftCount)
FinalTable <- kable(table1,col.names = c("Primary","Count","Avg Age","Males","Females","RightHanded","LeftHanded"))
FinalTable
graph.dat <- subset(kki,kki$mABC_TotalStandardScore <12)
total <- ggplot(data = graph.dat, aes(x = mABC_TotalStandardScore, y = SRS_TotalRawScore,colour = PrimaryDiagnosis)) + geom_point(alpha = .3) + geom_jitter() + geom_smooth()+ylab("SRS Total Score")+xlab("Motor Assessment Score")+ggtitle("Overall Association Between Social Deficits and Motor Ability")+ theme(legend.position = 'bottom')
SRS.Manual <- ggplot(data = kki, aes(x = mABC_ManualDexterity.Component.StandardScore, y = SRS_TotalRawScore, colour = PrimaryDiagnosis)) + geom_point(alpha = .3) + geom_jitter() + geom_smooth()+ theme(legend.position = 'none')+ylab("SRS Total Score")+xlab("Manual Dexterity Score")+ggtitle("Association between Manual Dexterity and Social Deficits")
SRS.AimAndCatch <- ggplot(data = kki, aes(x = mABC_AimingAndCatching.Component.StandardScore, y = SRS_TotalRawScore, colour = PrimaryDiagnosis)) + geom_point(alpha = .3) + geom_jitter() + geom_smooth()+ theme(legend.position = 'none')+ylab("SRS Total Score")+xlab("Aiming and Catching Score")+ggtitle("Association between Aiming and Catching and Social Deficits")
#Really interesting!
#The better the ADHD kids were at balance the better their social deficit was! Let's investigate the relationship between age and balance
graph.dat <- subset(kki, kki$mABC_Balance.Component.StandardScore < 15)
SRS.Balance <- ggplot(data = graph.dat, aes(x = mABC_Balance.Component.StandardScore, y = SRS_TotalRawScore, colour = PrimaryDiagnosis)) + geom_point(alpha = .3) + geom_jitter() + geom_smooth() + theme(legend.position = 'none')+ylab("SRS Total Score")+xlab("Balance Score")+ggtitle("Association Between Balance and Social Deficits")
total
SRS.Manual
SRS.AimAndCatch
SRS.Balance
ggplot(data = kki, aes(x = GAI, y = SRS_TotalRawScore,colour = PrimaryDiagnosis)) + geom_point() + geom_smooth() + ylab("SRS Total Score")+xlab("GAI Test Score")+ggtitle("Association between GAI Score and Social Deficits")
ggplot(data = kki, aes(x = GAI, y = mABC_TotalStandardScore,colour = PrimaryDiagnosis)) + geom_point() + geom_jitter() + geom_smooth() + ylab("Total Motor Score")+xlab("GAI Test Score")+ggtitle("Association between GAI Score and Motor Skills")
kki$Hand <- cut(kki$EdinburghHandedness_Integer,c(-1.01,-.5,.5,1.01),labels = c("Left","Mixed","Right"))
ggplot(data = na.omit(kki),aes(group = Hand,y = mABC_TotalStandardScore, colour = Hand)) + geom_boxplot() + facet_wrap(na.omit(kki)$PrimaryDiagnosis)
ggplot(data = na.omit(kki),aes(group = Hand,y = SRS_TotalRawScore, colour = Hand)) + geom_boxplot() + facet_wrap(na.omit(kki)$PrimaryDiagnosis)
kki.1 <- subset(kki,kki$SRS_VERSION == 1)
kki.2 <- subset(kki,kki$SRS_VERSION == 2)
t.test(kki.1$SRS_TotalRawScore,kki.2$SRS_TotalRawScore)
nodia1 <- subset(nodia,nodia$SRS_VERSION == 1)
nodia2 <- subset(nodia,nodia$SRS_VERSION == 2)
lm.nodia1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI  + Gender + mABC_AGE, data = nodia1)
lm.nodia2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI  + Gender + mABC_AGE, data = nodia2)
summary(lm.nodia2)
lm.adhd1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + ADHD_Subtype + Gender + mABC_AGE, data = kki.adhd1)
lm.basic1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = kki.adhd1)
ggplot(data = kki.adhd1,aes(x = mABC_Balance.Component.StandardScore,y = fitted(lm.adhd1), colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd1,aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 64.0176),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd1,aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 50.0456),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score") + facet_wrap(~Gender)
males <- which(kki.adhd1$Gender == "M")
ggplot(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore,y = fitted(lm.adhd1)[males], colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 64.0176),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 50.0456),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score(Males)") + ylab("Fitted Values") + xlab("mABC Balance Score")
females <- which(kki.adhd1$Gender == "F")
ggplot(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore,y = fitted(lm.adhd1)[males], colour = ADHD_Subtype)) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 64.0176),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd1[males,],aes(x = mABC_Balance.Component.StandardScore, mABC_Balance.Component.StandardScore *-2.38729 + 50.0456),colour = 'blue',size = 1.5) +     ggtitle("Effect of Balance Component on Total SRS Score(Females)") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = NULL,aes(x = fitted(lm.adhd1), y = residuals(lm.adhd1))) + geom_point() + geom_hline( yintercept = 0) + geom_smooth() +
ggtitle("Residual Plot for ADHD Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
standardize <- function(model) {
s = (1/85) * sum(residuals(model)^2)
residuals(model)/ (s * (sqrt(1-influence(model)$hat)))
}
student.lmadhd1 <- standardize(lm.adhd1)
leverage.lmadhd1 <- influence(lm.adhd1)$hat
ggplot(data = NULL,aes(x = leverage.lmadhd1, y = student.lmadhd1)) + geom_point() + geom_hline(y = 0)
anova(lm.basic1,lm.adhd1)
lm.adhd2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + ADHD_Subtype + Gender + mABC_AGE, data = kki.adhd2)
lm.basic2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = kki.adhd2)
ggplot(data = kki.adhd2,aes(x = mABC_AimingAndCatching.Component.StandardScore,y = fitted(lm.adhd2), colour = factor(ADHD_Subtype))) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd2,aes(x = mABC_AimingAndCatching.Component.StandardScore, mABC_AimingAndCatching.Component.StandardScore *-.9143 + 54.637),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd2,aes(x = mABC_AimingAndCatching.Component.StandardScore, mABC_AimingAndCatching.Component.StandardScore *-.9143 + 45.883),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
ggplot(data = NULL,aes(x = fitted(lm.adhd2), y = residuals(lm.adhd2))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for ADHD Model(2)") + xlab("Fitted Values") + ylab("Residual Values")
student.lmadhd2 <- standardize(lm.adhd2)
leverage.lmadhd2 <- influence(lm.adhd2)$hat
ggplot(data = NULL,aes(x = leverage.lmadhd2, y = student.lmadhd2)) + geom_point() + geom_hline(y = 0)
anova(lm.basic2,lm.adhd2)
aut <- subset(kki, kki$PrimaryDiagnosis == "Autism")
aut1 <- subset(aut, aut$SRS_VERSION == 1)
aut2 <- subset(aut, aut$SRS_VERSION == 2)
lm.aut1 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + SecondaryDiagnosis + Gender + mABC_AGE, data = aut1)
lm.aut1.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut1)
ggplot(data = NULL,aes(x = fitted(lm.aut1), y = residuals(lm.aut1))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
summary(lm.aut1)
qqnorm(lm.aut1$residuals)
qqline(lm.aut1$residuals, col = 'red')
plot(density(lm.aut1$residuals))
lm.aut2 <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore + EdinburghHandedness_Integer + GAI + SecondaryDiagnosis + Gender + mABC_AGE, data = aut2)
lm.aut2.basic <- lm(SRS_TotalRawScore ~ mABC_AimingAndCatching.Component.StandardScore + mABC_Balance.Component.StandardScore, data = aut2)
ggplot(data = NULL,aes(x = fitted(lm.aut2), y = residuals(lm.aut2))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
qqnorm(lm.aut2$residuals)
qqline(lm.aut2$residuals, col = 'red')
plot(density(lm.aut2$residuals))
ggplot(data = NULL,aes(x = fitted(lm.aut1), y = residuals(lm.aut1))) + geom_point() + geom_hline( yintercept = 0) + geom_smooth() +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
summary(lm.aut1)
ggplot(data = NULL,aes(x = fitted(lm.aut1), y = residuals(lm.aut1))) + geom_point() + geom_hline( yintercept = 0) + geom_smooth() +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
ggplot(data = NULL,aes(x = fitted(lm.aut1), y = residuals(lm.aut1))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
ggplot(data = NULL,aes(x = fitted(lm.aut2), y = residuals(lm.aut2))) + geom_point() + geom_hline( yintercept = 0) + geom_smooth() +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
ggplot(data = NULL,aes(x = fitted(lm.aut2), y = residuals(lm.aut2))) + geom_point() + geom_hline( yintercept = 0) +
ggtitle("Residual Plot for Autism Model(1)") + xlab("Fitted Values") + ylab("Residual Values")
ggplot(data = kki.adhd2,aes(x = mABC_AimingAndCatching.Component.StandardScore,y = fitted(lm.adhd2), colour = factor(ADHD_Subtype))) + geom_point() + geom_jitter() +
geom_line(data = kki.adhd2,aes(x = mABC_AimingAndCatching.Component.StandardScore, mABC_AimingAndCatching.Component.StandardScore *-.9143 + 54.637),colour = 'red',size = 1.5) +
geom_line(data = kki.adhd2,aes(x = mABC_AimingAndCatching.Component.StandardScore, mABC_AimingAndCatching.Component.StandardScore *-.9143 + 45.883),colour = 'blue',size = 1.5) + ggtitle("Effect of Balance Component on Total SRS Score") + ylab("Fitted Values") + xlab("mABC Balance Score")
